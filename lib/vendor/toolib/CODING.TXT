
Coding Guidelines
-----------------------

Current Revision: R4

 1. Comments must all have left asterisk
 	/**
 	 * Never omit left asterisk
 	 */
 	
    1.1 All function arguments must have type specifier
        /**
         * @param string $path The effective path of the cookie.
         */
      
    1.2 All functions that return objects must specify the object in docs.
        Note that the class's namespace must be resolvable, otherwise
        specify the full path of class.
        /**
         * @return \toolib\Http\Cookie
         *   - Cookie object with all data for this cookie
         *   - @b false if this cookie was not found.
         * .
         */
    1.3 All public variables that refer to an object must document
        their class in phpDoc format.
        
    1.4 Use doxygen @brief on first line, for a short description.
 
 2. Global functions must be named based on these rules
 	- all lowercase
 	- words are seperated with _
 	e.g. check_this();
 	     simple_function();
 	     show();
 	
 3. Class names must be named based on these rules
 	- Camelized text like MyVeryGoodClass
 	- Packages are seperated by php 5.3 namespaces.
    e.g.    ClassLoader     (class ClassLoader that belongs to no package)
            Auth\Storage    (class Storage of package Auth)

 4. Class methods must be in the following format:
    - Camelized text with first letter starting with lower case.
    e.g.
       $obj->getThisValue();
       $object->doThisThing();
        
 5. Files that contain functions must have filename of the form package.lib.php

 6. Files that contain a class must have extension .class.php
 	The directory structure is based on the namespace of the class.
    e.g. toolib\Cache\Apc class maps to path lib/vendor/toolib/Cache/Apc.class.php
